{"version":3,"sources":["webparts/pollsSpfx/components/Results.tsx"],"names":[],"mappings":"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","file":"webparts/pollsSpfx/components/Results.js","sourcesContent":["import * as React from 'react';\r\nimport { IResultProps } from \"./IResultProps\";\r\nimport { IResultState } from \"./IResultState\";\r\nimport { autobind } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport { merge } from '@microsoft/sp-lodash-subset';\r\nimport { IResultObject } from '../common/IObject';\r\nimport * as _ from \"lodash\";\r\n//const defaults = require('react-chartjs-2').defaults;\r\nconst Chart : any = require('chart.js');\r\nconst defaults : any = Chart.defaults;\r\n\r\n\r\n\r\ninterface IColorInfo {\r\n  backgroundColor: string;\r\n  pointBackgroundColor: string;\r\n  pointHoverBackgroundColor: string;\r\n  borderColor: string;\r\n  pointBorderColor: string;\r\n  pointHoverBorderColor: string;\r\n}\r\n\r\nexport class Results extends React.Component<IResultProps,IResultState>{\r\n\r\nprivate useExcanvas: boolean = typeof (window as any).G_vmlCanvasManager === 'object' &&\r\n(window as any).G_vmlCanvasManager !== null &&\r\ntypeof (window as any).G_vmlCanvasManager.initElement === 'function';\r\nprivate convertedColors: IColorInfo[] = undefined;\r\nprivate data: { labels: string[], datasets: any[] };\r\nprivate options: any;\r\n\r\nconstructor(props:IResultProps){\r\n    super(props);\r\n\r\n    this.state={\r\n        results:this.data\r\n    };\r\n}\r\n\r\npublic componentDidMount():void{\r\n       // from angular-chart.js\r\n       defaults.global.tooltips.mode = 'label';\r\n       defaults.global.elements.line.borderWidth = 2;\r\n       defaults.global.elements.rectangle.borderWidth = 2;\r\n       defaults.global.legend.display = false;\r\n       defaults.global.colors = [\r\n         '#97BBCD', // blue\r\n         '#DCDCDC', // light grey\r\n         '#F7464A', // red\r\n         '#46BFBD', // green\r\n         '#FDB45C', // yellow\r\n         '#949FB1', // grey\r\n         '#4D5360'  // dark grey\r\n       ];\r\n       this.convertedColors = defaults.global.colors.map((txt) => this.convertColor(txt));\r\n       // -- from angular-chart.js\r\n       debugger;\r\n       let options:string[]=[];\r\n       _.forEach(this.props.pollobject.Options,(value)=>{options.push(value.text);});\r\n       this.props.dataProvider.getResultsData(this.props.pollobject.Id,options)\r\n       .then(\r\n           (items:number[])=>{\r\n             debugger;\r\n            this.data={\r\n                labels:options,\r\n                datasets:[merge({},this.convertedColors[0],{\r\n                    label:this.props.pollobject.PollQuestion,\r\n                    data:items\r\n                })]\r\n            };\r\n            this.setState({results:this.data});\r\n           },\r\n           (data:any) =>{\r\n            this.setState({\r\n                errorMessage: data\r\n              });\r\n           }\r\n       ).catch((ex) => {\r\n        this.setState({\r\n          errorMessage: ex.errorMessage\r\n        });\r\n      });\r\n       \r\n}\r\n\r\npublic componentWillReceiveProps(nextProps):void{\r\n  debugger;\r\n  let options:string[]=[];\r\n  let chartLabel:string=nextProps.pollobject.PollQuestion;\r\n  _.forEach(nextProps.pollobject.Options,(value:any)=>{options.push(value.text);});\r\n  this.props.dataProvider.getResultsData(nextProps.pollobject.Id,options)\r\n  .then(\r\n      (items:number[])=>{\r\n       debugger;\r\n        this.data={\r\n           labels:options,\r\n           datasets:[merge({},this.convertedColors[2],{\r\n               label:chartLabel,\r\n               data:items\r\n           })]\r\n       };\r\n       this.setState({results:this.data});\r\n      },\r\n      (data:any) =>{\r\n       this.setState({\r\n           errorMessage: data\r\n         });\r\n      }\r\n  ).catch((ex) => {\r\n   this.setState({\r\n     errorMessage: ex.errorMessage\r\n   });\r\n });\r\n\r\n}\r\n\r\n\r\n\r\npublic render(): React.ReactElement<IResultProps>{\r\n  debugger;\r\n    return (\r\n        <div>\r\n            <HorizontalBar data={this.state.results} />\r\n        </div>\r\n    );\r\n}\r\n\r\n      // from angular-chart.js\r\n  @autobind\r\n  private convertColor(color: IColorInfo | string): IColorInfo {\r\n    if (typeof color === 'object' && color !== null) return color;\r\n    if (typeof color === 'string' && color[0] === '#') return this.getColor(Results.hexToRgb(color.substr(1)));\r\n    return this.getRandomColor();\r\n  }\r\n\r\n  private getRandomColor(): IColorInfo {\r\n    const color: number[] = [Results.getRandomInt(0, 255), Results.getRandomInt(0, 255), Results.getRandomInt(0, 255)];\r\n    return this.getColor(color);\r\n  }\r\n\r\n  private getColor(color: number[]): IColorInfo {\r\n    return {\r\n      backgroundColor: this.rgba(color, 0.2),\r\n      pointBackgroundColor: this.rgba(color, 1),\r\n      pointHoverBackgroundColor: this.rgba(color, 0.8),\r\n      borderColor: this.rgba(color, 1),\r\n      pointBorderColor: '#fff',\r\n      pointHoverBorderColor: this.rgba(color, 1)\r\n    };\r\n  }\r\n\r\n  private static getRandomInt(min: number, max: number): number {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  private rgba(color: number[], alpha: number): string {\r\n    // rgba not supported by IE8\r\n    return this.useExcanvas ? 'rgb(' + color.join(',') + ')' : 'rgba(' + color.concat(alpha).join(',') + ')';\r\n  }\r\n\r\n  // Credit: http://stackoverflow.com/a/11508164/1190235\r\n  private static hexToRgb(hex: string): number[] {\r\n    const bigint: number = parseInt(hex, 16),\r\n      r: number = (bigint >> 16) & 255,\r\n      g: number = (bigint >> 8) & 255,\r\n      b: number = bigint & 255;\r\n\r\n    return [r, g, b];\r\n  }\r\n  // -- from angular-chart.js\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}